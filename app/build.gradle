plugins {
    id "com.android.application"
}

def KEYSTOREPASSWORD = System.getenv('KEYSTOREPASSWORD')
def secretsPropertiesFile = file('../secrets.properties')
def secretsProperties = new Properties()

if (secretsPropertiesFile.exists()) {
    secretsProperties.load(new FileInputStream(secretsPropertiesFile))
}

def analytics = System.getenv("GOOGLE_ANALYTICS")
def analyticsEnabled = analytics != null
def useEnvForFirebase = false

if (analyticsEnabled) {
    useEnvForFirebase = true
} else if (secretsPropertiesFile.exists()) {
    if (secretsProperties.getProperty('useFirebase') != null) {
        analyticsEnabled = secretsProperties.getProperty('useFirebase') == "true"
        if (analyticsEnabled) {
            useEnvForFirebase = false
            analyticsEnabled = true
        }
    }
}

def signingEnabled = false
def keyStorePassword = ""

if (KEYSTOREPASSWORD != null) {
    password = KEYSTOREPASSWORD
    signingEnabled = true
} else if (secretsPropertiesFile.exists()) {
    if (secretsProperties.getProperty('KEYSTOREPASSWORD') != null) {
        keyStorePassword = secretsProperties.getProperty('KEYSTOREPASSWORD')
        signingEnabled = true
    }
}

if (analyticsEnabled) {
    apply plugin: "com.google.gms.google-services"
}

android {
    namespace 'com.dragon.ide'
    compileSdk 33
    buildToolsVersion "33.0.2"
    
    def getCommitHash = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine "git", "rev-parse", "--short", "HEAD"
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }

    defaultConfig {
        applicationId "com.dragon.ide"
        minSdk 21
        targetSdk 28
        versionCode 1
        versionName "1.0 Alpha01-Snapshot-" + getCommitHash()
        
        vectorDrawables { 
            useSupportLibrary true
        }
    }
    
    signingConfigs {
        release {
            if (signingEnabled) {
                storeFile file("../keystore.jks")
                storePassword keyStorePassword
                keyAlias "DragonIDE"
                keyPassword keyStorePassword
            }
        }
        debug {
            if (signingEnabled) {
                storeFile file("../keystore.jks")
                storePassword keyStorePassword
                keyAlias "DragonIDE"
                keyPassword keyStorePassword
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "com.google.android.material:material:1.9.0"
    implementation "androidx.core:core-splashscreen:1.0.1"
    if (analyticsEnabled) {
        if (useEnvForFirebase) {
            new File("$projectDir/google-services.json").text = analytics;
        }
    }
    
    def editorGroupId = "io.github.Rosemoe.sora-editor"
    implementation platform("$editorGroupId:bom:0.22.0")
    implementation "$editorGroupId:editor"
    implementation "$editorGroupId:language-textmate"
    
    implementation platform('com.google.firebase:firebase-bom:32.3.1')
    implementation 'com.google.firebase:firebase-analytics'
}
